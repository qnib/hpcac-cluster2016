---
# file: roles/docker/tasks/main.yml

- name: Remove docker 1.8.2 legacy
  yum: name={{ item }} state=removed
  with_items:
   - docker-selinux-1.8.2
   - docker-1.8.2
  tags: docker

- name: Put docker repo in place.
  copy: src=etc/yum.repos.d/docker.repo dest=/etc/yum.repos.d/docker.repo owner=root group=root mode=0644
  tags: docker
  
- name: be sure docker-engine is installed
  yum: name=docker-engine state=latest 
  tags: docker
  
- name: Put docker-engine systemd-file
  copy: src=systemd/docker.service dest=/usr/lib/systemd/system/docker.service owner=root group=root mode=0644
  tags: docker

- name: Put docker-engine environment file
  copy: src=sysconfig/docker dest=/etc/sysconfig/docker owner=root group=root mode=0644
  tags: docker

- name: Check if reload of docker.service is needed
  shell: systemctl status docker
  register: systemctl_dockerstat
  ignore_errors: True
  tags: docker
    
- name: reload systemd daemons
  shell: systemctl daemon-reload
  when: systemctl_dockerstat|failed
  tags: docker

- name: restart docker daemon
  service: name=docker state=restarted
  when: systemctl_dockerstat|failed
  tags: docker

- name: ensure docker daemon is started
  service: name=docker state=started
  tags: docker

- name: check amount of servers
  shell: /usr/local/bin/consul members |egrep -c "alive\s+server"
  register: consul_members
  when: is_master is defined
  tags: 
   - docker-net
   - docker
  
- name: check for the global docker-network
  shell: docker network ls
  register: docker_network_ls
  when: is_master is defined and consul_members.stdout.find('0') == -1
  tags:
   - docker-net
   - docker

- name: create docker network global
  shell: docker network create -d overlay global
  when: is_master is defined and consul_members.stdout.find('0') == -1
  tags: 
   - docker-net
   - docker
